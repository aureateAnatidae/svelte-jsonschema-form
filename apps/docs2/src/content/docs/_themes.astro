---
import { getRelativeLocaleUrl } from "astro:i18n";
import { Code, Tabs, TabItem, LinkCard } from "@astrojs/starlight/components";

import { THEME_PACKAGES, THEME_TITLES, THEMES, type Theme } from "@/shared";
import { DEFAULT_LOCALE } from "@/i18n";
import Npm from "@/components/npm.astro";
import FormCard from "@/components/form-card.astro";

import ThemeForm from "./_theme-form.svelte";

import schemaCode from "./_schema?raw";
import validatorCode from "./_validator?raw";
import withBasicCode from "./_with-basic.svelte?raw";
import withSkeletonCode from "./_with-skeleton.svelte?raw";
import withDaisyuiCode from "./_with-daisyui.svelte?raw";
import withDaisyui5Code from "./_with-daisyui5.svelte?raw";
import withFlowbiteCode from "./_with-flowbite.svelte?raw";
import withShadcnCode from "./_with-shadcn.svelte?raw";

import daisyuiStyles from "@sjsf/daisyui-theme/styles.css?inline";
import daisyu5Styles from "@sjsf/daisyui5-theme/styles.css?inline";
import flowbiteStyles from "@sjsf/flowbite-theme/styles.css?inline";
import skeletonStyles from "@sjsf/skeleton-theme/styles.css?inline";
import shadcnStyles from "@sjsf/shadcn-theme/styles.css?inline";

const CODE = {
  basic: withBasicCode,
  daisyui: withDaisyuiCode,
  daisyui5: withDaisyui5Code,
  flowbite: withFlowbiteCode,
  skeleton: withSkeletonCode,
  shadcn: withShadcnCode,
} satisfies Record<Theme, string>;

const STYLES = {
  basic: "",
  daisyui: daisyuiStyles,
  daisyui5: daisyu5Styles,
  flowbite: flowbiteStyles,
  skeleton: skeletonStyles,
  shadcn: shadcnStyles,
} satisfies Record<Theme, string>;

const locale = Astro.currentLocale ?? DEFAULT_LOCALE;

const styles = THEMES.map(theme =>`
  .theme-tabs:has(.theme-tab[data-theme="${theme}"]:checked) ~ .theme-content[data-theme="${theme}"] {
    display: block;
    height: 100%
  }
`).join('\n')
---

<div class="theme-tabs">
  {
    THEMES.map((theme) => (
      <input
        type="radio"
        name="theme-input"
        class="theme-tab"
        aria-label={THEME_TITLES[theme]}
        checked={theme === "basic"}
        data-theme={theme}
      />
    ))
  }
</div>
{
  THEMES.map((theme) => (
    <div class="theme-content" data-theme={theme} >
      <Npm
        pkg={`@sjsf/form @sjsf/ajv8-validator ajv@8 ${THEME_PACKAGES[theme]}`}
      />

      <LinkCard
        title={`${THEME_TITLES[theme]} theme setup`}
        href={getRelativeLocaleUrl(locale, `/themes/${theme}/`)}
      />

      <h2 id="usage">Usage</h2>

      <Tabs>
        <TabItem label="Form.svelte">
          <Code code={CODE[theme]} lang="svelte" />
        </TabItem>
        <TabItem label="_schema.ts">
          <Code code={schemaCode} lang="typescript" />
        </TabItem>
        <TabItem label="_validator.ts">
          <Code code={validatorCode} lang="typescript" />
        </TabItem>
      </Tabs>

      <FormCard style={STYLES[theme]}>
        <ThemeForm theme={theme} client:only="svelte" />
      </FormCard>
    </div>
  ))
}

<style>
  .theme-tabs {
    z-index: 10;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    gap: 0.5rem;
    position: sticky;
    top: calc(64px + 1rem);
  }
  .theme-tab {
    min-width: fit-content;
    appearance: none;
    cursor: pointer;
    text-align: center;
    user-select: none;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    display: inline-flex;
    padding-inline: 1.25rem;
    padding-block: 0.15rem;
    border: 1px solid var(--sl-color-gray-5);
    border-radius: 2rem;
    background-color: var(--sl-color-bg);
    box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;
    /* box-shadow: var(--sl-shadow-md); */
    &:after {
      content: attr(aria-label);
    }
    &:checked {
      background-color: var(--sl-color-gray-5);
      border-color: var(--sl-color-text-accent);
    }
  }
  .theme-content {
    display: none;
    width: 100%;
    order: 1;
    margin-top: 1rem;
    &:nth-child(2) > :global(:nth-child(2)) {
      margin-top: 0;
    }
  }
</style>

<style set:html={styles}></style>
